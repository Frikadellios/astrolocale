---

import PageLayout from "@/layouts/PageLayout.astro"
import TopLayout from "@/layouts/TopLayout.astro"
import BottomLayout from "@/layouts/BottomLayout.astro"
import Blog from "@/components/react/Blog"
import { BLOG } from "@/consts"

import { getCollection } from "astro:content"

export const getStaticPaths = () => {
  return LANGUAGES_ARRAY.map((lang) => ({
    params: { lang },
  }))
}



const blog = await getCollection(
  "blog",
  ({ slug }) => slug.split("/")[0] === lang
)

const posts = (await getCollection("blog"))
  .filter(post => !post.data.draft)
  .sort((a, b) => (b.data.pubDate?.getTime() ?? 0) - (a.data.pubDate?.getTime() ?? 0))
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import { LANGUAGES_ARRAY } from "@/i18n/i18n"
const tags = [...new Set(posts.flatMap(post => post.data.tags).filter(tag => tag))]
  .sort((a, b) => (a || '').toString().localeCompare((b || '').toString()))

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<PageLayout title={BLOG.TITLE} description={BLOG.DESCRIPTION} lang={lang}>
  <TopLayout>
    <div class="animate page-heading">
      {BLOG.TITLE}
    </div>
  </TopLayout>
  <BottomLayout>
    <div class="animate">
      <Blog client:load tags={tags.filter(tag => typeof tag === 'string')} data={posts} />
    </div>
  </BottomLayout>
</PageLayout>
