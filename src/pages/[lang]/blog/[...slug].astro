---
import { type CollectionEntry, getCollection } from "astro:content"
import PageLayout from "@/layouts/PageLayout.astro"
import TopLayout from "@/layouts/TopLayout.astro"
import BottomLayout from "@/layouts/BottomLayout.astro"
import { formatDate, readingTime } from "@/lib/utils"

// Define the type for the props expected by the page
type Props = {
  entry: CollectionEntry<"blog"> | CollectionEntry<"projects">
}

// Fetch and pass the entry data as a prop
export async function getStaticPaths() {
  const entries = await getCollection("blog") // Adjust collection as needed
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry } // Pass entry as a prop
  }))
}

const props = Astro.props as Props;
console.log("Props:", props); // Debugging output

if (!props.entry) {
  throw new Error("Entry is undefined");
}

const { entry } = props;
const { collection, data, body } = entry;
const { title, summary, date } = data;
const demoUrl = collection === "projects" ? data.demoUrl : null;
const repoUrl = collection === "projects" ? data.repoUrl : null;
const { Content } = await entry.render()

// Get the next and prev entries (modulo to wrap index)
const items = (await getCollection(collection))
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
const index = items.findIndex(x => x.slug === entry.slug)
const prev = items[(index - 1 + items.length) % items.length]
const next = items[(index + 1) % items.length]
---




<PageLayout title={title} description={summary}>
  <TopLayout>
    <div class="animate">
      <div>
        <a href={`/${collection}`} class="group w-fit p-1.5 gap-1.5 text-sm flex items-center border rounded hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 transition-colors duration-300 ease-in-out">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" class="stroke-current group-hover:stroke-black group-hover:dark:stroke-white">
            <line x1="19" y1="12" x2="5" y2="12" class="scale-x-0 group-hover:scale-x-100 translate-x-3 group-hover:translate-x-0 transition-all duration-300 ease-in-out" />
            <polyline points="12 19 5 12 12 5" class="translate-x-1 group-hover:translate-x-0 transition-all duration-300 ease-in-out" />
          </svg>
          <div class="w-full group-hover:text-black group-hover:dark:text-white transition-colors duration-300 ease-in-out">
            Back to 
          </div>
        </a>
        <div class="flex flex-wrap text-sm uppercase mt-12 gap-3 opacity-75">
          <div class="flex items-center gap-2">
            <svg class="size-5 stroke-current">
              <use href="/ui.svg#calendar"/>
            </svg>
            {formatDate(date)}
          </div>
          <div class="flex items-center gap-2">
            <svg class="size-5 stroke-current">
              <use href="/ui.svg#book-open"/>
            </svg>
            {readingTime(body)}
          </div>
        </div>
        <h1 class="text-3xl font-semibold text-black dark:text-white mt-2">
          {title}
        </h1>
        <div class="mt-1">
          {summary}
        </div>
        {(demoUrl || repoUrl) && 
        <div class="mt-4 flex flex-wrap gap-2">
          {demoUrl && 
            <a href={demoUrl} target="_blank" class="group flex gap-2 items-center px-3 py-1.5 truncate rounded text-xs md:text-sm lg:text-base border border-black/25 dark:border-white/25 hover:bg-black/5 hover:dark:bg-white/15 blend">
              <svg class="size-4">
                <use href="/ui.svg#globe" class="fill-current group-hover:fill-black group-hover:dark:fill-white blend"/>
              </svg>
              <span class="text-current group-hover:text-black group-hover:dark:text-white blend">
                See Demo
              </span>
            </a>
          }
          {repoUrl && 
            <a href={repoUrl} target="_blank" class="group flex gap-2 items-center px-3 py-1.5 truncate rounded text-xs md:text-sm lg:text-base border border-black/25 dark:border-white/25 hover:bg-black/5 hover:dark:bg-white/15 blend">
              <svg class="size-4">
                <use href="/ui.svg#link" class="fill-current group-hover:fill-black group-hover:dark:fill-white blend"/>
              </svg>
              <span class="text-current group-hover:text-black group-hover:dark:text-white blend">
                See Repository
              </span>
            </a>
          }
        </div> 
        }
      </div>
      
    </div>
  </TopLayout>
  <BottomLayout>
    <div class="animate">
      <div>
        <article>
          <Content/>
        </article>
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
          <a href={`/${prev.collection}/${prev.slug}`} class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 blend">
            <div class="order-2 w-full h-full group-hover:text-black group-hover:dark:text-white blend">
              <div class="flex flex-wrap gap-2">
                <div class="text-sm uppercase">
                  Prev
                </div>
              </div>
              <div class="font-semibold mt-3 text-black dark:text-white">
                {prev.data.title}
              </div>
            </div>
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" class="order-1 stroke-current group-hover:stroke-black group-hover:dark:stroke-white rotate-180">
              <line x1="5" y1="12" x2="19" y2="12" class="scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out" />
              <polyline points="12 5 19 12 12 19" class="translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out" />
            </svg>
          </a>
          <a href={`/${next.collection}/${next.slug}`} class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 transition-colors duration-300 ease-in-out">
            <div class="w-full h-full text-right group-hover:text-black group-hover:dark:text-white blend">
              <div class="text-sm uppercase">
                Next
              </div>
              <div class="font-semibold mt-3 text-black dark:text-white">
                {next.data.title}
              </div>
            </div>
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" class="stroke-current group-hover:stroke-black group-hover:dark:stroke-white">
              <line x1="5" y1="12" x2="19" y2="12" class="scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out" />
              <polyline points="12 5 19 12 12 19" class="translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out" />
            </svg>
          </a>
        </div>
      </div>
    </div>
  </BottomLayout>

</PageLayout>
</PageLayout>